class FontLean : public Font {
public:
	void ChooseFont() override {
		font = {
			{
 R"(           )",
 R"(      _/_/ )",
 R"(   _/    _/)",
 R"(  _/_/_/_/ )",
 R"( _/    _/  )",
 R"(_/    _/   )",
 R"(           )",
 R"(           )"
},
{
 R"(           )",
 R"(    _/_/_/ )",
 R"(   _/    _/)",
 R"(  _/_/_/   )",
 R"( _/    _/  )",
 R"(_/_/_/     )",
 R"(           )",
 R"(           )"
},
{
 R"(           )",
 R"(     _/_/_/)",
 R"(  _/       )",
 R"( _/        )",
 R"(_/         )",
 R"( _/_/_/    )",
 R"(           )",
 R"(           )"
},
{
 R"(           )",
 R"(    _/_/_/ )",
 R"(   _/    _/)",
 R"(  _/    _/ )",
 R"( _/    _/  )",
 R"(_/_/_/     )",
 R"(           )",
 R"(           )"
},
{
 R"(            )",
 R"(    _/_/_/_/)",
 R"(   _/       )",
 R"(  _/_/_/    )",
 R"( _/         )",
 R"(_/_/_/_/    )",
 R"(            )",
 R"(            )"
},
{
 R"(            )",
 R"(    _/_/_/_/)",
 R"(   _/       )",
 R"(  _/_/_/    )",
 R"( _/         )",
 R"(_/          )",
 R"(            )",
 R"(            )"
},
{
 R"(           )",
 R"(     _/_/_/)",
 R"(  _/       )",
 R"( _/  _/_/  )",
 R"(_/    _/   )",
 R"( _/_/_/    )",
 R"(           )",
 R"(           )"
},
{
 R"(            )",
 R"(    _/    _/)",
 R"(   _/    _/ )",
 R"(  _/_/_/_/  )",
 R"( _/    _/   )",
 R"(_/    _/    )",
 R"(            )",
 R"(            )"
},
{
 R"(          )",
 R"(    _/_/_/)",
 R"(     _/   )",
 R"(    _/    )",
 R"(   _/     )",
 R"(_/_/_/    )",
 R"(          )",
 R"(          )"
},
{
 R"(           )",
 R"(         _/)",
 R"(        _/ )",
 R"(       _/  )",
 R"(_/    _/   )",
 R"( _/_/      )",
 R"(           )",
 R"(           )"
},
{
 R"(            )",
 R"(    _/    _/)",
 R"(   _/  _/   )",
 R"(  _/_/      )",
 R"( _/  _/     )",
 R"(_/    _/    )",
 R"(            )",
 R"(            )"
},
{
 R"(        )",
 R"(    _/  )",
 R"(   _/   )",
 R"(  _/    )",
 R"( _/     )",
 R"(_/_/_/_/)",
 R"(        )",
 R"(        )"
},
{
 R"(              )",
 R"(    _/      _/)",
 R"(   _/_/  _/_/ )",
 R"(  _/  _/  _/  )",
 R"( _/      _/   )",
 R"(_/      _/    )",
 R"(              )",
 R"(              )"
},
{
 R"(              )",
 R"(    _/      _/)",
 R"(   _/_/    _/ )",
 R"(  _/  _/  _/  )",
 R"( _/    _/_/   )",
 R"(_/      _/    )",
 R"(              )",
 R"(              )"
},
{
 R"(          )",
 R"(     _/_/ )",
 R"(  _/    _/)",
 R"( _/    _/ )",
 R"(_/    _/  )",
 R"( _/_/     )",
 R"(          )",
 R"(          )"
},
{
 R"(           )",
 R"(    _/_/_/ )",
 R"(   _/    _/)",
 R"(  _/_/_/   )",
 R"( _/        )",
 R"(_/         )",
 R"(           )",
 R"(           )"
},
{
 R"(          )",
 R"(     _/_/ )",
 R"(  _/    _/)",
 R"( _/  _/_/ )",
 R"(_/    _/  )",
 R"( _/_/  _/ )",
 R"(          )",
 R"(          )"
},
{
 R"(           )",
 R"(    _/_/_/ )",
 R"(   _/    _/)",
 R"(  _/_/_/   )",
 R"( _/    _/  )",
 R"(_/    _/   )",
 R"(           )",
 R"(           )"
},
{
 R"(            )",
 R"(      _/_/_/)",
 R"(   _/       )",
 R"(    _/_/    )",
 R"(       _/   )",
 R"(_/_/_/      )",
 R"(            )",
 R"(            )"
},
{
 R"(          )",
 R"(_/_/_/_/_/)",
 R"(   _/     )",
 R"(  _/      )",
 R"( _/       )",
 R"(_/        )",
 R"(          )",
 R"(          )"
},
{
 R"(           )",
 R"(   _/    _/)",
 R"(  _/    _/ )",
 R"( _/    _/  )",
 R"(_/    _/   )",
 R"( _/_/      )",
 R"(           )",
 R"(           )"
},
{
 R"(            )",
 R"(  _/      _/)",
 R"( _/      _/ )",
 R"(_/      _/  )",
 R"( _/  _/     )",
 R"(  _/        )",
 R"(            )",
 R"(            )"
},
{
 R"(                )",
 R"(  _/          _/)",
 R"( _/          _/ )",
 R"(_/    _/    _/  )",
 R"( _/  _/  _/     )",
 R"(  _/  _/        )",
 R"(                )",
 R"(                )"
},
{
 R"(              )",
 R"(    _/      _/)",
 R"(     _/  _/   )",
 R"(      _/      )",
 R"(   _/  _/     )",
 R"(_/      _/    )",
 R"(              )",
 R"(              )"
},
{
 R"(          )",
 R"(_/      _/)",
 R"( _/  _/   )",
 R"(  _/      )",
 R"( _/       )",
 R"(_/        )",
 R"(          )",
 R"(          )"
},
{
 R"(              )",
 R"(    _/_/_/_/_/)",
 R"(         _/   )",
 R"(      _/      )",
 R"(   _/         )",
 R"(_/_/_/_/_/    )",
 R"(              )",
 R"(              )"
},
{
  R"(             )",
  R"(             )",
  R"(             )",
  R"(             )",
  R"(             )",
  R"(             )",
  R"(   _______   )",
  R"(  |_______|  )"
},
{
}
		};
		Ñursor();
	}
};